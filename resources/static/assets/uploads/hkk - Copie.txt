@Stateful
@LocalBean
public class ShopService {

	private List<ProductDto> products = new ArrayList<>();
	private double total;

	public void add(ProductDto product) {
		products.add(product);
	}

	public List<ProductDto> listProducts() {
		return products;
	}

}
***********************
@EJB
	private ShopService shopService;

	protected void doGet(HttpServletRequest request, HttpServletResponse response)
			throws ServletException, IOException {
		int quantity = Integer.parseInt(request.getParameter("quantity"));
		String name = request.getParameter("name");
		float price = Float.parseFloat(request.getParameter("price"));

		ProductDto product = new ProductDto(name, quantity, price);

		shopService.add(product);

		request.setAttribute("products", shopService.listProducts());
	
*****************************
<h1>Ajout d'un produit</h1>
	<form action="ShopServlet" method="POST">
		<table>
			<tr>
				<td>name:</td>
				<td><input type="text" name="name" /></td>
			</tr>
			<tr>
				<td>quantity:</td>
				<td><input type="text" name="quantity" /></td>
			</tr>
			<tr>
				<td>price:</td>
				<td><input type="text" name="price" /></td>
			</tr>
			<tr>
				<td></td>
				<td><input type="submit" name="action" value="add" /></td>
			</tr>
		</table>

	</form>
	<hr />
	<%
	List<ProductDto> products = (List<ProductDto>) request.getAttribute("products");
	%>
	<table border="1">
		<tr>
			<th>Name</th>
			<th>Quantity</th>
			<th>Price</th>
		</tr>

		<%
		if (products != null && !products.isEmpty()) {
			for (ProductDto product : products) {
		%>
		<tr>
			<td><%=product.getName()%></td>
			<td><%=product.getQuantity()%></td>
			<td><%=product.getPrice()%></td>
		</tr>


		<%
		}
		}
		%>

	</table>
RIADH BEN HALIMA14:09
*********************************
public class ProductDto implements Serializable {

	private static final long serialVersionUID = 1L;
	private String name;
	private int quantity;
	private float price;

	public ProductDto() {
		super();
	}

	public ProductDto(String name, int quantity, float price) {
		super();
		this.name = name;
		this.quantity = quantity;
		this.price = price;
	}

	public String getName() {
		return name;
	}

	public void setName(String name) {
		this.name = name;
	}

	public int getQuantity() {
		return quantity;
	}

	public void setQuantity(int quantity) {
		this.quantity = quantity;
	}

	public float getPrice() {
		return price;
	}

	public void setPrice(float price) {
		this.price = price;
	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((name == null) ? 0 : name.hashCode());
		result = prime * result + Float.floatToIntBits(price);
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true
;
		}
		if (obj == null) {
			return false;
		}
		if (getClass() != obj.getClass()) {
			return false;
		}
		ProductDto other = (ProductDto) obj;
		if (name == null) {
			if (other.name != null) {
				return false;
			}
		} else if (!name.equals(other.name)) {
			return false;
		}
		if (Float.floatToIntBits(price) != Float.floatToIntBits(other.price)) {
			return false;
		}
		return true;
	}

}
************servlet****************
	@EJB
	private ShopService shopService;

	protected void doGet(HttpServletRequest request, HttpServletResponse response)
			throws ServletException, IOException {
		int quantity = Integer.parseInt(request.getParameter("quantity"));
		String name = request.getParameter("name");
		float price = Float.parseFloat(request.getParameter("price"));

		ProductDto product = new ProductDto(name, quantity, price);

		shopService.add(product);

	
	request.setAttribute("products", shopService.listProducts());
===============================
$.ajax({
		url: 'ShopServlet',
		type: 'post',
		data: { 'action': 'delete', 'index': index },
		success: function() {
			alert("ok");

		},
		error: function() {
			alert("ko");
		}
	});
----------------------
<script
		src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.0-beta3/dist/js/bootstrap.bundle.min.js"
		integrity="sha384-JEW9xMcG8R+pH31jmWH6WWP0WintQrMb4s7ZOdauHnUtxwoG2vI5DkLtS3qm9Ekf"
		crossorigin="anonymous"></script>
	<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
	<script src="js/shop.js"></script>
======================
} else if ("edit".equals(request.getParameter("action"))) {
			int index = Integer.parseInt(request.getParameter("index"));

			ProductDto product = shopService.listProducts().get(index);
			request.setAttribute("index", index);
			request.setAttribute("product", product);
			request.getRequestDispatcher("edit-shop.jsp").forward(request, response);
			return;
		} else if ("update".equals(request.getParameter("action"))) {
			int quantity = Integer.parseInt(request.getParameter("quantity"));
			S
tring name = request.getParameter("name");
			float price = Float.parseFloat(request.getParameter("price"));

			ProductDto product = new ProductDto(name, quantity, price);
			int index = Integer.parseInt(request.getParameter("index"));

			shopService.update(index, product);

		}
=========================
<form action="ShopServlet" method="POST">
					<input type="hidden" name="index" value="<%=index%>" /> <input
						type="submit" name="action" value="edit" />
				</form>